[{"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\index.tsx":"1","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\reportWebVitals.ts":"2","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\layout\\Layout.tsx":"3","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\footer\\Footer.tsx":"4","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\header\\Header.tsx":"5","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\menu\\Menu.tsx":"6","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\home\\Home.tsx":"7","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\login\\Login.tsx":"8","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\about\\About.tsx":"9","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\UserLoginDetails.ts":"10","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\store.ts":"11","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\action-type.ts":"12","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\AppState.ts":"13","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\reducers.ts":"14","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\coupons\\FullCouponData.ts":"15","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\menu\\navbars\\NavBars.tsx":"16","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\PurchasesView.tsx":"17","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\purchaseunit\\PurchaseUnit.tsx":"18","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\purchases\\FullPurchaseData.ts":"19","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\account.tsx":"20","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\Account.tsx":"21","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\users\\FullUserData.ts":"22","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\units\\buttons\\ButtonsUnit.tsx":"23","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\units\\names\\NamesUnit.tsx":"24","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\newpurchase\\NewPurchaseView.tsx":"25","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\CouponUtils.ts":"26","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\view\\CouponsView.tsx":"27","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\create\\NewCoupon.tsx":"28","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\view\\units\\CouponComponent.tsx":"29","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\UpdateCoupon.tsx":"30","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\ImageUnit.tsx":"31","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\AmountUnit.tsx":"32","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\PriceUnit.tsx":"33","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\view\\CompaniesView.tsx":"34","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\CompanyUtils.ts":"35","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\view\\units\\CompanyComponent.tsx":"36","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\companies\\FullCompanyData.ts":"37","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\update\\ViewCompany.tsx":"38","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\create\\NewCompany.tsx":"39","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\users\\view\\UsersView.tsx":"40","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\users\\create\\NewUser.tsx":"41","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\users\\Utils.ts":"42","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\users\\view\\units\\UserComponent.tsx":"43","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\team\\OurTeam.tsx":"44","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\contact\\Contact.tsx":"45"},{"size":527,"mtime":1610882445482,"results":"46","hashOfConfig":"47"},{"size":425,"mtime":499162500000,"results":"48","hashOfConfig":"47"},{"size":3795,"mtime":1616398583061,"results":"49","hashOfConfig":"47"},{"size":461,"mtime":1616398595202,"results":"50","hashOfConfig":"47"},{"size":303,"mtime":1611066263056,"results":"51","hashOfConfig":"47"},{"size":1073,"mtime":1615820634922,"results":"52","hashOfConfig":"47"},{"size":236,"mtime":1616017292324,"results":"53","hashOfConfig":"47"},{"size":2936,"mtime":1616442691399,"results":"54","hashOfConfig":"47"},{"size":199,"mtime":1611235678160,"results":"55","hashOfConfig":"47"},{"size":134,"mtime":1613048216545,"results":"56","hashOfConfig":"47"},{"size":339,"mtime":1614856123883,"results":"57","hashOfConfig":"47"},{"size":207,"mtime":1616084371127,"results":"58","hashOfConfig":"47"},{"size":781,"mtime":1616084402151,"results":"59","hashOfConfig":"47"},{"size":1980,"mtime":1616084461889,"results":"60","hashOfConfig":"47"},{"size":436,"mtime":1613983280155,"results":"61","hashOfConfig":"47"},{"size":3738,"mtime":1616155229820,"results":"62","hashOfConfig":"47"},{"size":2710,"mtime":1616394769562,"results":"63","hashOfConfig":"47"},{"size":3096,"mtime":1614247546665,"results":"64","hashOfConfig":"47"},{"size":310,"mtime":1613981936173,"results":"65","hashOfConfig":"47"},{"size":3668,"mtime":1614848533238,"results":"66","hashOfConfig":"47"},{"size":2625,"mtime":1616437118554,"results":"67","hashOfConfig":"47"},{"size":303,"mtime":1614878889415,"results":"68","hashOfConfig":"47"},{"size":4617,"mtime":1614942966689,"results":"69","hashOfConfig":"47"},{"size":5229,"mtime":1615919390245,"results":"70","hashOfConfig":"47"},{"size":4030,"mtime":1615398370432,"results":"71","hashOfConfig":"47"},{"size":538,"mtime":1615820645472,"results":"72","hashOfConfig":"47"},{"size":2680,"mtime":1615833472892,"results":"73","hashOfConfig":"47"},{"size":6969,"mtime":1615552951275,"results":"74","hashOfConfig":"47"},{"size":5664,"mtime":1616443763091,"results":"75","hashOfConfig":"47"},{"size":1004,"mtime":1615547395508,"results":"76","hashOfConfig":"47"},{"size":2687,"mtime":1615548342953,"results":"77","hashOfConfig":"47"},{"size":2822,"mtime":1615552734482,"results":"78","hashOfConfig":"47"},{"size":2666,"mtime":1615552757962,"results":"79","hashOfConfig":"47"},{"size":2640,"mtime":1616346292906,"results":"80","hashOfConfig":"47"},{"size":549,"mtime":1615828842814,"results":"81","hashOfConfig":"47"},{"size":3381,"mtime":1616444289465,"results":"82","hashOfConfig":"47"},{"size":197,"mtime":1615832459156,"results":"83","hashOfConfig":"47"},{"size":7954,"mtime":1616444041504,"results":"84","hashOfConfig":"47"},{"size":3390,"mtime":1616136895035,"results":"85","hashOfConfig":"47"},{"size":2581,"mtime":1616155138955,"results":"86","hashOfConfig":"47"},{"size":4684,"mtime":1616155279301,"results":"87","hashOfConfig":"47"},{"size":438,"mtime":1616085355308,"results":"88","hashOfConfig":"47"},{"size":2628,"mtime":1616090683503,"results":"89","hashOfConfig":"47"},{"size":1981,"mtime":1616434414118,"results":"90","hashOfConfig":"47"},{"size":329,"mtime":1616398448599,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1uaxfny",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\index.tsx",[],["194","195"],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\reportWebVitals.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\layout\\Layout.tsx",["196"],"import { Component } from \"react\";\r\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Header from \"../header/Header\";\r\nimport Login from \"../login/Login\";\r\nimport Menu from \"../menu/Menu\";\r\nimport Home from \"../home/Home\";\r\nimport About from \"../about/About\";\r\nimport NewPurchaseView from \"../purchases/newpurchase/NewPurchaseView\";\r\nimport CouponsView from \"../coupons/view/CouponsView\";\r\nimport axios from \"axios\";\r\nimport PurchasesView from \"../purchases/PurchasesView\";\r\nimport './Layout.css';\r\nimport Account from \"../account/Account\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { BasicCouponData } from \"../../models/coupons/BasicCouponData\";\r\nimport NewCoupon from \"../coupons/create/NewCoupon\";\r\nimport UpdateCoupon from \"../coupons/update/UpdateCoupon\";\r\nimport CompaniesView from \"../companies/view/CompaniesView\";\r\nimport ViewCompany from \"../companies/update/ViewCompany\";\r\nimport NewCompany from \"../companies/create/NewCompany\";\r\nimport UsersView from \"../users/view/UsersView\";\r\nimport NewUser from \"../users/create/NewUser\";\r\nimport OurTeam from \"../team/OurTeam\";\r\nimport Contact from \"../contact/Contact\";\r\n\r\n\r\n\r\ninterface LayoutState{\r\n  defaultRouting: string\r\n}\r\n\r\nexport default class Layout extends Component<any,LayoutState>{\r\n  \r\n  public constructor(props: any){\r\n    super(props);\r\n\r\n    this.state = {\r\n      defaultRouting: \"/home\"\r\n    };\r\n\r\n\r\n  }\r\n  \r\n  public render() {\r\n    return(\r\n      <BrowserRouter>\r\n        <div className=\"layout\">\r\n          <header>\r\n            <Header />\r\n          </header>\r\n          <aside>\r\n            <Menu />\r\n          </aside>\r\n          <main>\r\n            <Switch> \r\n              <Route path=\"/home\" component = {Home} exact/>\r\n              <Route path=\"/login\" component = {Login} exact />\r\n              <Route path=\"/register\" component = {NewUser} exact />\r\n              <Route path=\"/about\" component = {About} exact />\r\n              <Route path=\"/coupons/create\" component = {NewCoupon} exact />\r\n              <Route path = \"/coupons/update\" component = {UpdateCoupon} exact />\r\n              <Route path=\"/coupons\" component={CouponsView} exact />\r\n              <Route path=\"/purchases/newPurchase\" component = {NewPurchaseView} exact />\r\n              <Route path=\"/purchases\" component = {PurchasesView} exact />\r\n              <Route path=\"/account\" component = {Account} exact />\r\n              <Route path=\"/companies\" component={CompaniesView} exact />\r\n              <Route path=\"/companies/viewCompany\" component={ViewCompany} exact />\r\n              <Route path=\"/companies/create\" component={NewCompany} exact />\r\n              <Route path=\"/users\" component={UsersView} exact />\r\n              <Route path=\"users/create\" component={NewUser} exact />\r\n              <Route path=\"/ourTeam\" component={OurTeam} exact/>\r\n              <Route path=\"/contact\" component={Contact} exact/>\r\n              <Redirect from = \"/\" to = {this.state.defaultRouting} exact />\r\n            </Switch>\r\n          </main>\r\n          <footer>\r\n            <Footer />\r\n          </footer>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  async componentDidMount(){\r\n    try {\r\n      axios.defaults.headers.common[\"Authorization\"] = sessionStorage.getItem(\"token\");\r\n      let response = await axios.get<BasicCouponData[]>(\"http://localhost:8080/coupons\");\r\n      if(response.status == 200){\r\n        store.dispatch({ type: ActionType.GetAllCoupons, payload: (await response).data });\r\n        store.dispatch({type: ActionType.Login});\r\n        this.setState({ defaultRouting: \"/coupons\" });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Not loged in\");\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\footer\\Footer.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\header\\Header.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\menu\\Menu.tsx",["197","198"],"import { Component } from \"react\";\r\nimport {store} from \"../../redux/store\";\r\nimport { VisitorsMenu, BasicUserMenu, AdminMenu} from \"./navbars/NavBars\"\r\nimport \"./Menu.css\";\r\n\r\ninterface MenuState{\r\n    isLoged: boolean;\r\n}\r\n\r\nexport default class Menu extends Component<any, MenuState> {\r\n    public constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            isLoged: store.getState().isLoged\r\n        }\r\n        store.subscribe(() => this.setState(\r\n                {\r\n                     isLoged: store.getState().isLoged\r\n                }\r\n            )\r\n        );\r\n   }\r\n    public render(){\r\n        let isDefaultUser = this.state.isLoged && sessionStorage.getItem(\"userType\") != \"ADMIN\";\r\n        let isAdmin = this.state.isLoged && sessionStorage.getItem(\"userType\") == \"ADMIN\";\r\n        return (\r\n            <div className=\"menu\">\r\n                {!this.state.isLoged && <VisitorsMenu/>}\r\n                {isDefaultUser && <BasicUserMenu/>}\r\n                {isAdmin && <AdminMenu/>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\home\\Home.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\login\\Login.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\about\\About.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\UserLoginDetails.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\store.ts",["199","200"],"import {createStore} from \"redux\";\r\nimport { FullCouponData } from \"../models/coupons/FullCouponData\";\r\nimport { FullUserData } from \"../models/users/FullUserData\";\r\nimport {AppState} from \"./AppState\";\r\nimport {reducer} from \"./reducers\";\r\n\r\nconst initialState = new AppState();\r\n\r\nexport const store = createStore(reducer, initialState);","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\action-type.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\AppState.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\reducers.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\coupons\\FullCouponData.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\menu\\navbars\\NavBars.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\PurchasesView.tsx",["201"],"import { Component, ChangeEvent} from \"react\";\r\nimport {store} from \"../../redux/store\";\r\nimport axios from \"axios\";\r\nimport { BasicPurchaseData } from \"../../models/purchases/BasicPurchaseData\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport PurchaseUnit from \"./purchaseunit/PurchaseUnit\";\r\nimport \"./PurchasesView.css\";\r\n\r\ninterface PurchasesState{\r\n    purchases: BasicPurchaseData[],\r\n    input: string\r\n}\r\n\r\nexport default class PurchasesView extends Component<any,PurchasesState>{\r\n    public constructor(props: any){\r\n        super(props);\r\n        \r\n        let initialPurchasesList = store.getState().purchases;\r\n        if( ! initialPurchasesList){\r\n            initialPurchasesList = [];\r\n        }\r\n        \r\n        this.state = {\r\n            purchases: initialPurchasesList,\r\n            input: \"\"\r\n        }\r\n        store.subscribe(this.subscription);\r\n    }\r\n    public render(){\r\n        return(\r\n            <div className=\"purchasesView\">\r\n                <section className=\"topSection\">\r\n                    <h1>Hi, good to see you :)</h1>\r\n                    <label htmlFor=\"companyFilter\">Filter By Title:</label>\r\n                    <input type=\"text\" id=\"companyFilter\" onChange={this.setInput} />\r\n                </section>\r\n                <section>\r\n                    {this.state.purchases.filter(this.filterFunc).map(\r\n                        (purchase) => <PurchaseUnit key={purchase.id} {...purchase} />\r\n                    )}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let isLoged = store.getState().isLoged;\r\n        let purchases = store.getState().purchases;\r\n        let shouldGetPurchases = (!purchases) && isLoged;\r\n\r\n        if (shouldGetPurchases ) {\r\n            try {\r\n                let response = await axios.get<BasicPurchaseData[]>(\"http://localhost:8080/purchases\");\r\n                store.dispatch({ type: ActionType.GetAllPurchases, payload: response.data });\r\n            } catch (error) {\r\n                console.error(error.message);\r\n                alert(\"General Error\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private subscription = () => {\r\n       if (store.getState().purchases){\r\n           this.setState({ purchases: store.getState().purchases });\r\n       }\r\n    }\r\n\r\n    private setInput = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({input: event.target.value.toLowerCase()});\r\n    }\r\n\r\n    private filterFunc = (purchase: BasicPurchaseData) => {\r\n        let input = this.state.input\r\n        if(input == \"\"){\r\n            return true;\r\n        }\r\n        return purchase.couponTitle.toLowerCase().includes(input);\r\n    }\r\n}\r\n\r\n","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\purchaseunit\\PurchaseUnit.tsx",["202","203"],"import {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PurchaseUnit.css\";\r\nimport { BasicPurchaseData } from \"../../../models/purchases/BasicPurchaseData\";\r\nimport { FullPurchaseData } from \"../../../models/purchases/FullPurchaseData\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\ninterface PurchaseState{\r\n    showModal: boolean,\r\n    fullPurchase: FullPurchaseData\r\n}\r\n\r\nexport default class PurchaseUnit extends Component<BasicPurchaseData, PurchaseState>{\r\n    public constructor(props: BasicPurchaseData){\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            fullPurchase: new FullPurchaseData()\r\n        }\r\n    }\r\n\r\n    public render(){\r\n        return(\r\n            <div className=\"purchaseUnit\">\r\n                <h2 id=\"title\">{this.props.couponTitle}</h2>\r\n                <h3 id=\"companyName\">Amount: {this.props.amount}</h3>\r\n                <h3 id=\"price\">Price: {this.props.totalPrice}</h3>\r\n                <h3 id=\"endDate\">TimeStamp: {this.props.timeStamp}</h3>\r\n                <button onClick={this.openModal}>View details</button>\r\n                <Modal dialogClassName=\"purchaseModal\" enforceFocus scrollable show={this.state.showModal}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>\r\n                            <h2>Coupon's title: {this.state.fullPurchase.couponTitle}</h2>\r\n                            <h3>Company: {this.state.fullPurchase.companyName}</h3>\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h3>Amount: {this.state.fullPurchase.amount}</h3>\r\n                        <h3>Price: {this.state.fullPurchase.totalPrice}</h3>\r\n                        <h3>Time Staamp: {this.state.fullPurchase.timeStamp}</h3>\r\n                        {\r\n                            sessionStorage.getItem(\"userType\") == \"ADMIN\" &&\r\n                            <h3>Username: {this.state.fullPurchase.userName}</h3>\r\n                        }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button onClick={this.hideModal}>Cancel</button>\r\n                        {\r\n                            sessionStorage.getItem(\"userType\") == \"ADMIN\" &&\r\n                            <button>Delete</button>\r\n                        }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private openModal = async () => {\r\n        if (this.state.fullPurchase.couponTitle === undefined) {\r\n            try {\r\n                let url = \"http://localhost:8080/purchases/\" + this.props.id;\r\n                let response = await axios.get<FullPurchaseData>(url);\r\n                this.setState({ showModal: true, fullPurchase: response.data });\r\n                return;\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        }\r\n        this.setState({ showModal: true });\r\n    }\r\n    \r\n    private hideModal = async() =>{\r\n        this.setState({showModal: false});\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\purchases\\FullPurchaseData.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\account.tsx",["204"],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\Account.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\users\\FullUserData.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\units\\buttons\\ButtonsUnit.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\units\\names\\NamesUnit.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\newpurchase\\NewPurchaseView.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\CouponUtils.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\view\\CouponsView.tsx",["205"],"import {ChangeEvent, Component} from \"react\";\r\nimport {store} from \"../../../redux/store\";\r\nimport {BasicCouponData} from \"../../../models/coupons/BasicCouponData\";\r\nimport  CouponComponent from \"./units/CouponComponent\";\r\nimport \"./CouponsView.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getAllCoupons } from \"../CouponUtils\";\r\n\r\n\r\ninterface CouponsViewState{\r\n    coupons: BasicCouponData[];\r\n    filterValue: string;\r\n}\r\n\r\nexport default class CouponsView extends Component<any, CouponsViewState> {\r\n    public constructor(props: any){\r\n        super(props);\r\n        \r\n        let initialCouponList = store.getState().coupons;\r\n        if( ! initialCouponList){\r\n            initialCouponList = [];\r\n        }\r\n\r\n        this.state = {\r\n            coupons: initialCouponList,\r\n            filterValue: \"\"\r\n        }\r\n        store.subscribe(this.subscription); \r\n    }\r\n\r\n   public render(){ \r\n        let userType = sessionStorage.getItem(\"userType\");\r\n        return(\r\n            <div className = \"couponsView\">\r\n             <section className=\"topSection\">\r\n                    <h1>Hi, good to see you :)</h1>\r\n                    {\r\n                        userType === \"COMPANY\" &&\r\n                        <NavLink to =\"/coupons/create\" exact>\r\n                            <button>Create Coupon</button>\r\n                        </NavLink>\r\n                    }\r\n                    <label htmlFor=\"couponTitleFilter\">Filter By Title:</label>\r\n                    <input type=\"text\" id=\"couponTitleFilter\" onChange={this.setFilterValue}/>\r\n             </section>\r\n             <section>\r\n                {\r\n                     this.state.coupons.filter(this.filter).map(\r\n                        (coupon) => <CouponComponent key={coupon.id} {...coupon} />\r\n                      )\r\n                }\r\n             </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let isLoged = store.getState().isLoged;\r\n        let coupons = store.getState().coupons;\r\n        let shouldGetCoupons = (! coupons) && isLoged;\r\n       \r\n        if (shouldGetCoupons) {\r\n            getAllCoupons();\r\n        }\r\n    }\r\n\r\n    private setFilterValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({filterValue: event.target.value.toLowerCase()});\r\n    }\r\n\r\n    private filter = (coupon: BasicCouponData): boolean =>{\r\n        if(this.state.filterValue == \"\"){\r\n            return true;\r\n        }\r\n        return coupon.couponTitle.toLowerCase().includes(this.state.filterValue);\r\n    }\r\n\r\n    private subscription = () =>{\r\n        this.setState({  coupons: store.getState().coupons});\r\n    }\r\n\r\n    \r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\create\\NewCoupon.tsx",["206"],"import axios from \"axios\";\r\nimport {Component, ChangeEvent} from \"react\";\r\nimport \"./NewCoupon.css\";\r\nimport { getAllCoupons } from \"../CouponUtils\";\r\n\r\ninterface NewCouponState{\r\n    title ?: string,\r\n    description?: string,\r\n    category?: string,\r\n    image?: string,\r\n    amount?: number,\r\n    price?: number,\r\n    startDate?: Date,\r\n    endDate?: Date\r\n}\r\n\r\nexport default class NewCoupon extends Component<any, NewCouponState>{\r\n    public constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            title: null,\r\n            description: null,\r\n            category: null,\r\n            image: null,\r\n            amount: 1,\r\n            price: 0,\r\n            startDate: new Date(),\r\n            endDate: null\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        let today = new Date();\r\n        return(\r\n            <div className=\"newCoupon\">\r\n                <br/>\r\n                <section className=\"textInputFields\">\r\n                    Title: <input type=\"text\" onChange={this.setTitle} placeholder=\"Enter Coupon's title\" minLength={2} id=\"titleInput\" required />\r\n                    Description: <input type=\"text\" onChange={this.setDescription} placeholder=\"Enter Coupon's description\" minLength={2} id=\"descriptionInput\" required />\r\n                    <br/><br/>\r\n                    Image: <input type=\"url\" onChange={this.setImage} placeholder=\"Enter Image url\" id=\"imageInput\" required />\r\n                    <br/><br/>\r\n                    Amount: <input type=\"number\" onChange={this.setAmount} placeholder=\"Enter an amount\" min=\"1\" id=\"amountInput\" required />\r\n                    Price: <input type=\"number\" onChange={this.setPrice} placeholder=\"Set the price\" min=\"0\" id=\"priceInput\" required />\r\n                </section>\r\n                <br/>\r\n                <select placeholder=\"Select coupon's category\" id=\"categoryIntup\" onChange={this.setCategory} required>\r\n                    <option value=\"CATEGORY\">Choose Category</option>\r\n                    <option value=\"GROCERIES\">Groceries</option>\r\n                    <option value=\"ELECTRICITY\">Electricity</option>\r\n                    <option value=\"VACATION\">Vacations</option>\r\n                    <option value=\"RESTAURANT\">Restaurants</option>\r\n                    <option value=\"SPORT\">Sport</option>\r\n                    <option value=\"FATION\">Fation</option>\r\n                    <option value=\"ATRACTIONS\">Atractions</option>\r\n                </select>\r\n                <br/><br/>\r\n                <section className=\"dateInput\">\r\n                    Start-Date: <input type=\"date\" onChange={this.setStartDate} min={today.toISOString()} id=\"startDateInput\" />\r\n                    End-Date: <input type=\"date\" onChange={this.setEndDate} min={today.toISOString()} id=\"endDateInput\" required />\r\n                </section>\r\n                <br/><br/>\r\n                <button onClick={this.createCoupon}>Create Coupon</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private setTitle = (event: ChangeEvent<HTMLInputElement>) =>{\r\n        this.setState({ title: event.target.value });\r\n    }\r\n\r\n    private setDescription = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({description: event.target.value});\r\n        console.log(this.state.description);\r\n    }\r\n\r\n    private setCategory = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        let option = event.target.selectedOptions[0]\r\n        if (option.value != \"CATEGORY\") {\r\n            this.setState({ category: option.value });\r\n        }\r\n        else{\r\n            this.setState({category: null});\r\n        }\r\n    }\r\n\r\n    private setImage = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({image: event.target.value});\r\n    }\r\n\r\n    private setAmount = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let value = Number(event.target.value)\r\n        this.setState({ amount: value });\r\n    }\r\n\r\n    private setPrice = (event: ChangeEvent<HTMLInputElement>) =>{\r\n        let value = Number(event.target.value)\r\n        this.setState({price: value});\r\n    }\r\n\r\n    private setStartDate = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let date = new Date(event.target.value)\r\n        this.setState({ startDate: date });\r\n    }\r\n\r\n    private setEndDate = (event: ChangeEvent<HTMLInputElement>) =>{\r\n        let date = new Date(event.target.value)\r\n        this.setState({endDate: date});\r\n    }\r\n\r\n    private createCoupon = async () =>{\r\n        try {\r\n            this.validateCreaateCoupon();           \r\n            await axios.post(\"http://localhost:8080/coupons\",this.state);\r\n            alert(\"The coupon was successfully created\");\r\n        } catch (error: any) {\r\n            alert(\"Coupon creation was failed\");\r\n            console.error(error.message);\r\n        }\r\n        getAllCoupons();\r\n        this.props.history.push(\"/coupons\");\r\n    }\r\n\r\n    private validateCreaateCoupon = () => {\r\n        if( ! this.state.title){\r\n            let message = \"Must enter a title\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(this.state.title.length < 2){\r\n            let message = \"Title must be at least two charachters long\";\r\n            alert(message)\r\n            throw new Error(message);\r\n        }\r\n        if( ! this.state.description){\r\n            let message = \"Must enter a descritpion\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(this.state.description.length < 2){\r\n            let message = \"Description must be at least two charachters long\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(! this.state.category){\r\n            let message = \"Must select a category\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(this.state.amount < 1){\r\n            let message = \"Amount must be greater than 0\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(this.state.price < 0){\r\n            let message = \"Price can't be negative\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(this.state.startDate < new Date()){\r\n            let message = \"Start-Date has already past\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if( ! this.state.endDate){\r\n            let message = \"Must enter an end-date\";\r\n            alert(message);\r\n            throw new Error(message); \r\n        }\r\n        if(this.state.endDate <= this.state.startDate){\r\n            let message = \"Expiary date is invalid\";\r\n            alert(message)\r\n            throw new Error(message);\r\n        }\r\n        let amount = this.state.amount;\r\n        if( ! Number.isInteger(amount)){\r\n            let message = \"Amount must be an hole number\";\r\n            alert(message);\r\n            throw new Error(message);\r\n            \r\n        }\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\view\\units\\CouponComponent.tsx",["207","208","209"],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\UpdateCoupon.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\ImageUnit.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\AmountUnit.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\PriceUnit.tsx",["210"],"import axios from \"axios\";\r\nimport { Component, ChangeEvent} from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { store } from \"../../../../redux/store\";\r\nimport { getAllCoupons } from \"../../CouponUtils\";\r\nimport \"./Unit.css\";\r\n\r\ninterface UnitState{\r\n    input: string,\r\n    showModal: boolean,\r\n    price: number\r\n}\r\n\r\nexport  class PriceUnit extends Component<any, UnitState>{\r\n    public constructor(props: any){\r\n        super(props);\r\n        let coupon = store.getState().couponForAction;\r\n        this.state = {\r\n            input: null,\r\n            showModal: false,\r\n            price: coupon ? coupon.price : 0\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"unit\">\r\n                <h2>price:</h2>\r\n                <h3>{this.state.price}</h3>\r\n                <button onClick={this.setShowModal}>Change</button>\r\n                <Modal enforceFocus show={this.state.showModal}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>\r\n                            <h2>Update Coupon's price</h2>\r\n                        </Modal.Title>\r\n                        <Modal.Body>\r\n                            <h3>Price: {this.state.price}</h3>\r\n                            <input type=\"number\" placeholder=\"Enter coupon's price\" onChange={this.setInput} />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <button onClick={this.setShowModal}>Cancel</button>\r\n                            <button onClick={this.updatePrice}>Apply</button>\r\n                        </Modal.Footer>\r\n                    </Modal.Header>\r\n\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private setShowModal = () =>{\r\n        let newShowModal = ! this.state.showModal;\r\n        this.setState({showModal: newShowModal});\r\n    }\r\n\r\n    private setInput = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({input: event.target.value});\r\n    }\r\n\r\n    private updatePrice = async () => {\r\n        let newPrice = Number(this.state.input);\r\n        let couponID = store.getState().couponForAction.id\r\n        let url = \"http://localhost:8080/coupons/\" + couponID + \"/price\";\r\n        let data = {\r\n            price: this.state.input\r\n        };\r\n        try {\r\n            await axios.put(url,data);\r\n            alert(\"Coupon's price was updated successfully\");\r\n            this.setState({ price: parseFloat(data.price) })\r\n            getAllCoupons();\r\n        } catch (error) {\r\n            console.error(error.message);\r\n            alert(\"Update process was failed\");\r\n        }\r\n        this.setShowModal();\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\view\\CompaniesView.tsx",["211"],"import { Component, ChangeEvent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BasicCompanyData } from \"../../../models/companies/BasicCompanyData\";\r\nimport { store } from \"../../../redux/store\";\r\nimport { getAllCompanies } from \"../CompanyUtils\";\r\nimport CompanyComponent from \"./units/CompanyComponent\";\r\nimport \"./CompaniesView.css\"\r\n\r\ninterface CompaniesViewState{\r\n    companies: BasicCompanyData[],\r\n    filterValue: string\r\n}\r\n\r\nexport default class CompaniesView extends Component<any, CompaniesViewState> {\r\n    public constructor(props: any){\r\n        super(props);\r\n\r\n        let initialCompaniesList = store.getState().companies;\r\n        if (!initialCompaniesList) {\r\n            initialCompaniesList = [];\r\n        }\r\n\r\n        this.state = {\r\n            companies: initialCompaniesList,\r\n            filterValue: \"\"\r\n        }\r\n\r\n        store.subscribe(this.subscription);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"companiesView\">\r\n                <section className=\"topSection\">\r\n                    <h1>Hi, good to see you :)</h1>\r\n                        <NavLink to=\"/companies/create\" exact>\r\n                            <button>Create Company</button>\r\n                        </NavLink>\r\n                    <label htmlFor=\"companyFilter\">Filter By name:</label>\r\n                    <input type=\"text\" id=\"companyFilter\" onChange={this.setFilterValue} />\r\n                </section>\r\n                <section>\r\n                    {\r\n                        this.state.companies.filter(this.filter).map(\r\n                            (company) => <CompanyComponent key={company.id} {...company} />\r\n                        )\r\n                    }\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let isLoged = store.getState().isLoged;\r\n        let companies = store.getState().companies;\r\n        let shouldGetCompanies = (! companies) && isLoged;\r\n\r\n        if(shouldGetCompanies){\r\n            getAllCompanies();\r\n        }\r\n    }\r\n\r\n    private setFilterValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ filterValue: event.target.value.toLowerCase() });\r\n    }\r\n\r\n    private filter = (company: BasicCompanyData): boolean => {\r\n        if (this.state.filterValue == \"\") {\r\n            return true;\r\n        }\r\n        return company.name.toLowerCase().includes(this.state.filterValue);\r\n    }\r\n\r\n    private subscription = () => {\r\n        if (store.getState().companies ){\r\n            this.setState({ companies: store.getState().companies });\r\n        }\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\CompanyUtils.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\view\\units\\CompanyComponent.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\companies\\FullCompanyData.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\update\\ViewCompany.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\create\\NewCompany.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\users\\view\\UsersView.tsx",["212"],"import {ChangeEvent, Component} from \"react\";\r\nimport { BasicUserData } from \"../../../models/users/BasicUserData\";\r\nimport { store } from \"../../../redux/store\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./UsersView.css\"\r\nimport UserComponent from \"./units/UserComponent\";\r\nimport { getAllUsers } from \"../Utils\";\r\n\r\ninterface UsersViewState{\r\n    users: BasicUserData[],\r\n    filterValue: string\r\n}\r\n\r\nexport default class UsersView extends Component<any, UsersViewState>{\r\n    public constructor(props: any){\r\n        super(props);\r\n        \r\n        let usersList = store.getState().users;\r\n        if( !usersList ){\r\n            usersList = [];\r\n        }\r\n\r\n        this.state = {\r\n            users: usersList,\r\n            filterValue: \"\"\r\n        }\r\n\r\n        store.subscribe(this.subscription);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"usersView\">\r\n                <section className=\"topSection\">\r\n                    <h1>Hi, good to see you :)</h1>\r\n                    {\r\n                        <NavLink to={{ pathname: \"/register\", state:{userType: \"ADMIN\"}}} exact>\r\n                            <button>Create Admin User</button>\r\n                        </NavLink>\r\n                    }\r\n                    <label htmlFor=\"usersFilter\">Filter By Username:</label>\r\n                    <input type=\"text\" id=\"usersFilter\" onChange={this.setFilterValue} />\r\n                </section>\r\n                <section>\r\n                    {\r\n                        this.state.users.filter(this.filter).map(\r\n                            (user) => <UserComponent key={user.id} {...user} />\r\n                        )\r\n                    }\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let isLoged = store.getState().isLoged;\r\n        let companies = store.getState().companies;\r\n        let shouldGetCompanies = (!companies) && isLoged;\r\n\r\n        if (shouldGetCompanies) {\r\n            getAllUsers();\r\n        }\r\n    }\r\n\r\n    private setFilterValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ filterValue: event.target.value.toLowerCase() });\r\n    }\r\n\r\n    private filter = (user: BasicUserData): boolean => {\r\n        if (this.state.filterValue == \"\") {\r\n            return true;\r\n        }\r\n        return user.userName.toLowerCase().includes(this.state.filterValue);\r\n    }\r\n\r\n    private subscription = () => {\r\n        if (store.getState().users) {\r\n            this.setState({ users: store.getState().users });\r\n        }\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\users\\create\\NewUser.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\users\\Utils.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\users\\view\\units\\UserComponent.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\team\\OurTeam.tsx",["213"],"import {Component} from \"react\";\r\nimport \"./OurTeam.css\";\r\n\r\nconst skillArr = [\r\n    {\r\n        title:\"Programin Languages\",\r\n        skills: [\"Java - SpringBoot, SpringData, JDBC, JPA\", \"Pyhton - Pandas, Matplotlib\", \"JavaScript - React.JS\"]\r\n    },\r\n    {\r\n        title:\"Tools and Technoligies\",\r\n        skills: [\"SQL - MySQL, MsSQL\", \"GIT\", \"HTML/CSS\"]\r\n    },\r\n    {\r\n        title:\"IDE's\",\r\n        skills: [\"Eclipse\", \"VS Code\", \"PyCharm\"]\r\n    }\r\n]\r\n\r\nexport default class OurTeam extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"ourTeam\">\r\n                <h2>Our Team</h2>\r\n                <section className=\"picture\">\r\n                    <img src=\"./picture.jpg\" alt=\"Founder's picture\" />\r\n                    <small>Baruch Varticovschi</small>\r\n                </section>\r\n                <section>\r\n                    <h3>Founder and CEO - Baruch Varticovschi</h3>\r\n                    <p>\r\n                        Baruch is a 26 years old fullstack developer.\r\n                        Last year, Baruch desided to establish this astonishing website. \r\n                    </p>\r\n                    <section className=\"skills\">\r\n                        <h4>Main Skills:</h4>\r\n                        <ul>\r\n                            {skillArr.map((currentElement, index) => <SkillBlock {...currentElement} key={index} />)}\r\n                        </ul>\r\n                    </section>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ninterface SkillProps{\r\n    title: string,\r\n    skills: string[]\r\n}\r\n\r\nclass SkillBlock extends Component<SkillProps>{\r\n    public constructor(props: SkillProps){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"skillBlock\">\r\n                <h5>{this.props.title}:</h5>\r\n                <ol>\r\n                    {this.props.skills.map((skill) => <li>{skill}</li>)}\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\contact\\Contact.tsx",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":90,"column":26,"nodeType":"220","messageId":"221","endLine":90,"endColumn":28},{"ruleId":"218","severity":1,"message":"222","line":24,"column":86,"nodeType":"220","messageId":"221","endLine":24,"endColumn":88},{"ruleId":"218","severity":1,"message":"219","line":25,"column":80,"nodeType":"220","messageId":"221","endLine":25,"endColumn":82},{"ruleId":"223","severity":1,"message":"224","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":24},{"ruleId":"223","severity":1,"message":"227","line":3,"column":10,"nodeType":"225","messageId":"226","endLine":3,"endColumn":22},{"ruleId":"218","severity":1,"message":"219","line":74,"column":18,"nodeType":"220","messageId":"221","endLine":74,"endColumn":20},{"ruleId":"218","severity":1,"message":"219","line":42,"column":64,"nodeType":"220","messageId":"221","endLine":42,"endColumn":66},{"ruleId":"218","severity":1,"message":"219","line":49,"column":64,"nodeType":"220","messageId":"221","endLine":49,"endColumn":66},{"ruleId":"218","severity":1,"message":"219","line":85,"column":33,"nodeType":"220","messageId":"221","endLine":85,"endColumn":35},{"ruleId":"218","severity":1,"message":"219","line":72,"column":35,"nodeType":"220","messageId":"221","endLine":72,"endColumn":37},{"ruleId":"218","severity":1,"message":"222","line":79,"column":26,"nodeType":"220","messageId":"221","endLine":79,"endColumn":28},{"ruleId":"218","severity":1,"message":"219","line":60,"column":36,"nodeType":"220","messageId":"221","endLine":60,"endColumn":38},{"ruleId":"218","severity":1,"message":"219","line":61,"column":35,"nodeType":"220","messageId":"221","endLine":61,"endColumn":37},{"ruleId":"218","severity":1,"message":"219","line":62,"column":33,"nodeType":"220","messageId":"221","endLine":62,"endColumn":35},{"ruleId":"223","severity":1,"message":"228","line":61,"column":13,"nodeType":"225","messageId":"226","endLine":61,"endColumn":21},{"ruleId":"218","severity":1,"message":"219","line":68,"column":36,"nodeType":"220","messageId":"221","endLine":68,"endColumn":38},{"ruleId":"218","severity":1,"message":"219","line":70,"column":36,"nodeType":"220","messageId":"221","endLine":70,"endColumn":38},{"ruleId":"229","severity":1,"message":"230","line":25,"column":21,"nodeType":"231","endLine":25,"endColumn":72},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","@typescript-eslint/no-unused-vars","'FullCouponData' is defined but never used.","Identifier","unusedVar","'FullUserData' is defined but never used.","'newPrice' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]