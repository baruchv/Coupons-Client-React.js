[{"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\index.tsx":"1","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\reportWebVitals.ts":"2","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\layout\\Layout.tsx":"3","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\footer\\Footer.tsx":"4","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\header\\Header.tsx":"5","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\menu\\Menu.tsx":"6","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\home\\Home.tsx":"7","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\login\\Login.tsx":"8","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\sign up\\SignUp.tsx":"9","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\about\\About.tsx":"10","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\UserLoginDetails.ts":"11","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\store.ts":"12","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\action-type.ts":"13","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\AppState.ts":"14","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\reducers.ts":"15","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\coupons\\FullCouponData.ts":"16","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\menu\\navbars\\NavBars.tsx":"17","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\PurchasesView.tsx":"18","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\purchaseunit\\PurchaseUnit.tsx":"19","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\purchases\\FullPurchaseData.ts":"20","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\account.tsx":"21","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\Account.tsx":"22","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\users\\FullUserData.ts":"23","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\units\\buttons\\ButtonsUnit.tsx":"24","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\units\\names\\NamesUnit.tsx":"25","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\newpurchase\\NewPurchaseView.tsx":"26","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\CouponUtils.ts":"27","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\view\\CouponsView.tsx":"28","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\create\\NewCoupon.tsx":"29","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\view\\units\\CouponComponent.tsx":"30","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\UpdateCoupon.tsx":"31","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\ImageUnit.tsx":"32","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\AmountUnit.tsx":"33","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\PriceUnit.tsx":"34","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\view\\CompaniesView.tsx":"35","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\CompanyUtils.ts":"36","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\view\\units\\CompanyComponent.tsx":"37","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\companies\\FullCompanyData.ts":"38","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\update\\ViewCompany.tsx":"39"},{"size":527,"mtime":1610882445482,"results":"40","hashOfConfig":"41"},{"size":425,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":3262,"mtime":1615963214212,"results":"43","hashOfConfig":"41"},{"size":445,"mtime":1615870059640,"results":"44","hashOfConfig":"41"},{"size":303,"mtime":1611066263056,"results":"45","hashOfConfig":"41"},{"size":1073,"mtime":1615820634922,"results":"46","hashOfConfig":"41"},{"size":191,"mtime":1611235618817,"results":"47","hashOfConfig":"41"},{"size":2756,"mtime":1615820642179,"results":"48","hashOfConfig":"41"},{"size":4391,"mtime":1613651828471,"results":"49","hashOfConfig":"41"},{"size":199,"mtime":1611235678160,"results":"50","hashOfConfig":"41"},{"size":134,"mtime":1613048216545,"results":"51","hashOfConfig":"41"},{"size":339,"mtime":1614856123883,"results":"52","hashOfConfig":"41"},{"size":207,"mtime":1615875022603,"results":"53","hashOfConfig":"41"},{"size":687,"mtime":1615875005535,"results":"54","hashOfConfig":"41"},{"size":1787,"mtime":1615875055826,"results":"55","hashOfConfig":"41"},{"size":436,"mtime":1613983280155,"results":"56","hashOfConfig":"41"},{"size":3691,"mtime":1615836432046,"results":"57","hashOfConfig":"41"},{"size":2004,"mtime":1615836066395,"results":"58","hashOfConfig":"41"},{"size":3096,"mtime":1614247546665,"results":"59","hashOfConfig":"41"},{"size":310,"mtime":1613981936173,"results":"60","hashOfConfig":"41"},{"size":3668,"mtime":1614848533238,"results":"61","hashOfConfig":"41"},{"size":2625,"mtime":1615834176866,"results":"62","hashOfConfig":"41"},{"size":303,"mtime":1614878889415,"results":"63","hashOfConfig":"41"},{"size":4617,"mtime":1614942966689,"results":"64","hashOfConfig":"41"},{"size":5229,"mtime":1615919390245,"results":"65","hashOfConfig":"41"},{"size":4030,"mtime":1615398370432,"results":"66","hashOfConfig":"41"},{"size":538,"mtime":1615820645472,"results":"67","hashOfConfig":"41"},{"size":2680,"mtime":1615833472892,"results":"68","hashOfConfig":"41"},{"size":6969,"mtime":1615552951275,"results":"69","hashOfConfig":"41"},{"size":4970,"mtime":1615963116185,"results":"70","hashOfConfig":"41"},{"size":1004,"mtime":1615547395508,"results":"71","hashOfConfig":"41"},{"size":2687,"mtime":1615548342953,"results":"72","hashOfConfig":"41"},{"size":2822,"mtime":1615552734482,"results":"73","hashOfConfig":"41"},{"size":2666,"mtime":1615552757962,"results":"74","hashOfConfig":"41"},{"size":2657,"mtime":1615872816507,"results":"75","hashOfConfig":"41"},{"size":549,"mtime":1615828842814,"results":"76","hashOfConfig":"41"},{"size":3334,"mtime":1615963167348,"results":"77","hashOfConfig":"41"},{"size":197,"mtime":1615832459156,"results":"78","hashOfConfig":"41"},{"size":6877,"mtime":1616003768564,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1uaxfny",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\index.tsx",[],["170","171"],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\reportWebVitals.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\layout\\Layout.tsx",["172"],"import { Component } from \"react\";\r\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Header from \"../header/Header\";\r\nimport Login from \"../login/Login\";\r\nimport Menu from \"../menu/Menu\";\r\nimport Home from \"../home/Home\";\r\nimport About from \"../about/About\";\r\nimport SignUp from \"../sign up/SignUp\";\r\nimport NewPurchaseView from \"../purchases/newpurchase/NewPurchaseView\";\r\nimport CouponsView from \"../coupons/view/CouponsView\";\r\nimport axios from \"axios\";\r\nimport PurchasesView from \"../purchases/PurchasesView\";\r\nimport './Layout.css';\r\nimport Account from \"../account/Account\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { BasicCouponData } from \"../../models/coupons/BasicCouponData\";\r\nimport NewCoupon from \"../coupons/create/NewCoupon\";\r\nimport UpdateCoupon from \"../coupons/update/UpdateCoupon\";\r\nimport CompaniesView from \"../companies/view/CompaniesView\";\r\nimport ViewCompany from \"../companies/update/ViewCompany\";\r\n\r\n\r\n\r\ninterface LayoutState{\r\n  defaultRouting: string\r\n}\r\n\r\nexport default class Layout extends Component<any,LayoutState>{\r\n  \r\n  public constructor(props: any){\r\n    super(props);\r\n\r\n    this.state = {\r\n      defaultRouting: \"/home\"\r\n    };\r\n\r\n\r\n  }\r\n  \r\n  public render() {\r\n    return(\r\n      <BrowserRouter>\r\n        <div className=\"layout\">\r\n          <header>\r\n            <Header />\r\n          </header>\r\n          <aside>\r\n            <Menu />\r\n          </aside>\r\n          <main>\r\n            <Switch> \r\n              <Route path=\"/home\" component = {Home} exact/>\r\n              <Route path=\"/login\" component = {Login} exact />\r\n              <Route path=\"/register\" component = {SignUp} exact />\r\n              <Route path=\"/about\" component = {About} exact />\r\n              <Route path=\"/coupons/create\" component = {NewCoupon} exact />\r\n              <Route path = \"/coupons/update\" component = {UpdateCoupon} exact />\r\n              <Route path=\"/coupons\" component={CouponsView} exact />\r\n              <Route path=\"/purchases/newPurchase\" component = {NewPurchaseView} exact />\r\n              <Route path=\"/purchases\" component = {PurchasesView} exact />\r\n              <Route path=\"/account\" component = {Account} exact />\r\n              <Route path=\"/companies\" component={CompaniesView} exact />\r\n              <Route path=\"/companies/viewCompany\" component={ViewCompany} exact />\r\n              <Redirect from = \"/\" to = {this.state.defaultRouting} exact />\r\n            </Switch>\r\n          </main>\r\n          <footer>\r\n            <Footer />\r\n          </footer>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  async componentDidMount(){\r\n    try {\r\n      axios.defaults.headers.common[\"Authorization\"] = sessionStorage.getItem(\"token\");\r\n      let response = await axios.get<BasicCouponData[]>(\"http://localhost:8080/coupons\");\r\n      if(response.status == 200){\r\n        store.dispatch({ type: ActionType.GetAllCoupons, payload: (await response).data });\r\n        store.dispatch({type: ActionType.Login});\r\n        this.setState({ defaultRouting: \"/coupons\" });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Login session was timed out\");\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\footer\\Footer.tsx",["173","174"],"import {Component} from \"react\";\r\nimport './Footer.css';\r\n\r\nexport default class Footer extends Component{\r\n    public render(){\r\n        return(\r\n            <div className=\"footer\">\r\n                <a id=\"contactLink\" href=\"\">Contact Us</a>\r\n                <a id=\"ourTeamLink\" href=\"\">Our Team</a>\r\n                <a id=\"githubRepositoryLink\" href=\"https://github.com/baruchv\">Github Repository</a>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\header\\Header.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\menu\\Menu.tsx",["175","176"],"import { Component } from \"react\";\r\nimport {store} from \"../../redux/store\";\r\nimport { VisitorsMenu, BasicUserMenu, AdminMenu} from \"./navbars/NavBars\"\r\nimport \"./Menu.css\";\r\n\r\ninterface MenuState{\r\n    isLoged: boolean;\r\n}\r\n\r\nexport default class Menu extends Component<any, MenuState> {\r\n    public constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            isLoged: store.getState().isLoged\r\n        }\r\n        store.subscribe(() => this.setState(\r\n                {\r\n                     isLoged: store.getState().isLoged\r\n                }\r\n            )\r\n        );\r\n   }\r\n    public render(){\r\n        let isDefaultUser = this.state.isLoged && sessionStorage.getItem(\"userType\") != \"ADMIN\";\r\n        let isAdmin = this.state.isLoged && sessionStorage.getItem(\"userType\") == \"ADMIN\";\r\n        return (\r\n            <div className=\"menu\">\r\n                {!this.state.isLoged && <VisitorsMenu/>}\r\n                {isDefaultUser && <BasicUserMenu/>}\r\n                {isAdmin && <AdminMenu/>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\home\\Home.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\login\\Login.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\sign up\\SignUp.tsx",["177"],"import axios from \"axios\";\r\nimport { ChangeEvent, Component } from \"react\";\r\nimport { SuccessfulLoginData } from \"../../models/SuccessfulLoginData\";\r\nimport { UserLoginDetails } from \"../../models/UserLoginDetails\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./SignUp.css\";\r\n\r\ninterface RegisterState{\r\n    userName: string,\r\n    password: string,\r\n    firstName: string,\r\n    surName: string\r\n}\r\n\r\nexport default class SignUp extends Component<any,RegisterState> {\r\n    public constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            surName: \"\"\r\n        }\r\n    }\r\n    \r\n    public render() {\r\n        return (\r\n            <div className=\"sign-up\">\r\n                <h2>Please Fill Details</h2>\r\n                <label htmlFor=\"firstname-input\" id=\"firstname-label\">First Name:</label>\r\n                <input type=\"text\" id=\"firstname-input\" onChange = {this.setFirstName} title=\"Enter your first name - at least 2 characters long\" required />\r\n                <br />\r\n                <label htmlFor=\"surname-input\" id=\"surname-label\">Surname:</label>\r\n                <input type=\"text\" id=\"surname-input\" onChange = {this.setSurName} title=\"Enter your surname - at least 2 characters long\" required />\r\n                <br />\r\n                <label htmlFor=\"username-input\" id=\"username-label\">Username:</label>\r\n                <input type=\"text\" id=\"username-input\" onChange = {this.setUserName} title=\"Enter a username - at least 2 characters long\" required />\r\n                <br />\r\n                <label htmlFor=\"password-input\" id=\"password-label\">Password:</label>\r\n                <input type=\"password\" id=\"password-input\" onChange = {this.setPassword} title=\"Enter a password - at least 8 characters long\"  required />\r\n                <button type=\"submit\" onClick = {this.register}>Sign Up</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private setUserName = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let userName = event.target.value;\r\n        this.setState({ userName });\r\n    }\r\n\r\n    private setPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let password = event.target.value;\r\n        this.setState({ password });\r\n    }\r\n\r\n    private setFirstName = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let firstName = event.target.value;\r\n        this.setState({ firstName });\r\n    }\r\n\r\n    private setSurName = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let surName = event.target.value;\r\n        this.setState({ surName });\r\n    }\r\n\r\n\r\n    private register = async () =>{\r\n        let registerData = {\r\n            userName: this.state.userName,\r\n            password: this.state.password,\r\n            firstName: this.state.firstName,\r\n            surName: this.state.surName,\r\n            type: \"CUSTOMER\"\r\n        }\r\n        if (registerData.userName.length < 2) {\r\n            alert(\"username must be longer than 1 charachter\");\r\n            return;\r\n\r\n        }\r\n        if (registerData.surName.length < 2) {\r\n            alert(\"username must be longer than 1 charachter\");\r\n            return;\r\n\r\n        }\r\n        if (registerData.firstName.length < 2) {\r\n            alert(\"username must be longer than 1 charachter\");\r\n            return;\r\n\r\n        }\r\n        if (registerData.password.length < 8) {\r\n            alert(\"username must be longer than 7 charachter\");\r\n            return;\r\n\r\n        }\r\n\r\n        try {\r\n            let response = await axios.post(\"http://localhost:8080/users\", registerData);\r\n            alert(\"Register Succeeded\");\r\n            this.login();\r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n\r\n    }\r\n\r\n    private login = async () =>{\r\n        let userLoginDetails = new UserLoginDetails(this.state.userName, this.state.password);\r\n        let response = await axios.post<SuccessfulLoginData>(\"http://localhost:8080/users/login\", userLoginDetails);\r\n        axios.defaults.headers.common[\"Authorization\"] = response.data.token;\r\n        store.dispatch({ type: ActionType.Login });\r\n        sessionStorage.setItem(\"userType\", \"CUSTOMER\");\r\n        sessionStorage.setItem(\"token\", response.data.token);\r\n        this.props.history.push(\"/coupons\");\r\n    }\r\n    \r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\about\\About.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\UserLoginDetails.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\store.ts",["178","179"],"import {createStore} from \"redux\";\r\nimport { FullCouponData } from \"../models/coupons/FullCouponData\";\r\nimport { FullUserData } from \"../models/users/FullUserData\";\r\nimport {AppState} from \"./AppState\";\r\nimport {reducer} from \"./reducers\";\r\n\r\nconst initialState = new AppState();\r\n\r\nexport const store = createStore(reducer, initialState);","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\action-type.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\AppState.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\redux\\reducers.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\coupons\\FullCouponData.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\menu\\navbars\\NavBars.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\PurchasesView.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\purchaseunit\\PurchaseUnit.tsx",["180","181"],"import {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PurchaseUnit.css\";\r\nimport { BasicPurchaseData } from \"../../../models/purchases/BasicPurchaseData\";\r\nimport { FullPurchaseData } from \"../../../models/purchases/FullPurchaseData\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\ninterface PurchaseState{\r\n    showModal: boolean,\r\n    fullPurchase: FullPurchaseData\r\n}\r\n\r\nexport default class PurchaseUnit extends Component<BasicPurchaseData, PurchaseState>{\r\n    public constructor(props: BasicPurchaseData){\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            fullPurchase: new FullPurchaseData()\r\n        }\r\n    }\r\n\r\n    public render(){\r\n        return(\r\n            <div className=\"purchaseUnit\">\r\n                <h2 id=\"title\">{this.props.couponTitle}</h2>\r\n                <h3 id=\"companyName\">Amount: {this.props.amount}</h3>\r\n                <h3 id=\"price\">Price: {this.props.totalPrice}</h3>\r\n                <h3 id=\"endDate\">TimeStamp: {this.props.timeStamp}</h3>\r\n                <button onClick={this.openModal}>View details</button>\r\n                <Modal dialogClassName=\"purchaseModal\" enforceFocus scrollable show={this.state.showModal}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>\r\n                            <h2>Coupon's title: {this.state.fullPurchase.couponTitle}</h2>\r\n                            <h3>Company: {this.state.fullPurchase.companyName}</h3>\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h3>Amount: {this.state.fullPurchase.amount}</h3>\r\n                        <h3>Price: {this.state.fullPurchase.totalPrice}</h3>\r\n                        <h3>Time Staamp: {this.state.fullPurchase.timeStamp}</h3>\r\n                        {\r\n                            sessionStorage.getItem(\"userType\") == \"ADMIN\" &&\r\n                            <h3>Username: {this.state.fullPurchase.userName}</h3>\r\n                        }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button onClick={this.hideModal}>Cancel</button>\r\n                        {\r\n                            sessionStorage.getItem(\"userType\") == \"ADMIN\" &&\r\n                            <button>Delete</button>\r\n                        }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private openModal = async () => {\r\n        if (this.state.fullPurchase.couponTitle === undefined) {\r\n            try {\r\n                let url = \"http://localhost:8080/purchases/\" + this.props.id;\r\n                let response = await axios.get<FullPurchaseData>(url);\r\n                this.setState({ showModal: true, fullPurchase: response.data });\r\n                return;\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        }\r\n        this.setState({ showModal: true });\r\n    }\r\n    \r\n    private hideModal = async() =>{\r\n        this.setState({showModal: false});\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\purchases\\FullPurchaseData.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\account.tsx",["182"],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\Account.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\users\\FullUserData.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\units\\buttons\\ButtonsUnit.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\account\\units\\names\\NamesUnit.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\purchases\\newpurchase\\NewPurchaseView.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\CouponUtils.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\view\\CouponsView.tsx",["183"],"import {ChangeEvent, Component} from \"react\";\r\nimport {store} from \"../../../redux/store\";\r\nimport {BasicCouponData} from \"../../../models/coupons/BasicCouponData\";\r\nimport  CouponComponent from \"./units/CouponComponent\";\r\nimport \"./CouponsView.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getAllCoupons } from \"../CouponUtils\";\r\n\r\n\r\ninterface CouponsViewState{\r\n    coupons: BasicCouponData[];\r\n    filterValue: string;\r\n}\r\n\r\nexport default class CouponsView extends Component<any, CouponsViewState> {\r\n    public constructor(props: any){\r\n        super(props);\r\n        \r\n        let initialCouponList = store.getState().coupons;\r\n        if( ! initialCouponList){\r\n            initialCouponList = [];\r\n        }\r\n\r\n        this.state = {\r\n            coupons: initialCouponList,\r\n            filterValue: \"\"\r\n        }\r\n        store.subscribe(this.subscription); \r\n    }\r\n\r\n   public render(){ \r\n        let userType = sessionStorage.getItem(\"userType\");\r\n        return(\r\n            <div className = \"couponsView\">\r\n             <section className=\"topSection\">\r\n                    <h1>Hi, good to see you :)</h1>\r\n                    {\r\n                        userType === \"COMPANY\" &&\r\n                        <NavLink to =\"/coupons/create\" exact>\r\n                            <button>Create Coupon</button>\r\n                        </NavLink>\r\n                    }\r\n                    <label htmlFor=\"couponTitleFilter\">Filter By Title:</label>\r\n                    <input type=\"text\" id=\"couponTitleFilter\" onChange={this.setFilterValue}/>\r\n             </section>\r\n             <section>\r\n                {\r\n                     this.state.coupons.filter(this.filter).map(\r\n                        (coupon) => <CouponComponent key={coupon.id} {...coupon} />\r\n                      )\r\n                }\r\n             </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let isLoged = store.getState().isLoged;\r\n        let coupons = store.getState().coupons;\r\n        let shouldGetCoupons = (! coupons) && isLoged;\r\n       \r\n        if (shouldGetCoupons) {\r\n            getAllCoupons();\r\n        }\r\n    }\r\n\r\n    private setFilterValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({filterValue: event.target.value.toLowerCase()});\r\n    }\r\n\r\n    private filter = (coupon: BasicCouponData): boolean =>{\r\n        if(this.state.filterValue == \"\"){\r\n            return true;\r\n        }\r\n        return coupon.couponTitle.toLowerCase().includes(this.state.filterValue);\r\n    }\r\n\r\n    private subscription = () =>{\r\n        this.setState({  coupons: store.getState().coupons});\r\n    }\r\n\r\n    \r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\create\\NewCoupon.tsx",["184"],"import axios from \"axios\";\r\nimport {Component, ChangeEvent} from \"react\";\r\nimport \"./NewCoupon.css\";\r\nimport { getAllCoupons } from \"../CouponUtils\";\r\n\r\ninterface NewCouponState{\r\n    title ?: string,\r\n    description?: string,\r\n    category?: string,\r\n    image?: string,\r\n    amount?: number,\r\n    price?: number,\r\n    startDate?: Date,\r\n    endDate?: Date\r\n}\r\n\r\nexport default class NewCoupon extends Component<any, NewCouponState>{\r\n    public constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            title: null,\r\n            description: null,\r\n            category: null,\r\n            image: null,\r\n            amount: 1,\r\n            price: 0,\r\n            startDate: new Date(),\r\n            endDate: null\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        let today = new Date();\r\n        return(\r\n            <div className=\"newCoupon\">\r\n                <br/>\r\n                <section className=\"textInputFields\">\r\n                    Title: <input type=\"text\" onChange={this.setTitle} placeholder=\"Enter Coupon's title\" minLength={2} id=\"titleInput\" required />\r\n                    Description: <input type=\"text\" onChange={this.setDescription} placeholder=\"Enter Coupon's description\" minLength={2} id=\"descriptionInput\" required />\r\n                    <br/><br/>\r\n                    Image: <input type=\"url\" onChange={this.setImage} placeholder=\"Enter Image url\" id=\"imageInput\" required />\r\n                    <br/><br/>\r\n                    Amount: <input type=\"number\" onChange={this.setAmount} placeholder=\"Enter an amount\" min=\"1\" id=\"amountInput\" required />\r\n                    Price: <input type=\"number\" onChange={this.setPrice} placeholder=\"Set the price\" min=\"0\" id=\"priceInput\" required />\r\n                </section>\r\n                <br/>\r\n                <select placeholder=\"Select coupon's category\" id=\"categoryIntup\" onChange={this.setCategory} required>\r\n                    <option value=\"CATEGORY\">Choose Category</option>\r\n                    <option value=\"GROCERIES\">Groceries</option>\r\n                    <option value=\"ELECTRICITY\">Electricity</option>\r\n                    <option value=\"VACATION\">Vacations</option>\r\n                    <option value=\"RESTAURANT\">Restaurants</option>\r\n                    <option value=\"SPORT\">Sport</option>\r\n                    <option value=\"FATION\">Fation</option>\r\n                    <option value=\"ATRACTIONS\">Atractions</option>\r\n                </select>\r\n                <br/><br/>\r\n                <section className=\"dateInput\">\r\n                    Start-Date: <input type=\"date\" onChange={this.setStartDate} min={today.toISOString()} id=\"startDateInput\" />\r\n                    End-Date: <input type=\"date\" onChange={this.setEndDate} min={today.toISOString()} id=\"endDateInput\" required />\r\n                </section>\r\n                <br/><br/>\r\n                <button onClick={this.createCoupon}>Create Coupon</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private setTitle = (event: ChangeEvent<HTMLInputElement>) =>{\r\n        this.setState({ title: event.target.value });\r\n    }\r\n\r\n    private setDescription = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({description: event.target.value});\r\n        console.log(this.state.description);\r\n    }\r\n\r\n    private setCategory = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        let option = event.target.selectedOptions[0]\r\n        if (option.value != \"CATEGORY\") {\r\n            this.setState({ category: option.value });\r\n        }\r\n        else{\r\n            this.setState({category: null});\r\n        }\r\n    }\r\n\r\n    private setImage = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({image: event.target.value});\r\n    }\r\n\r\n    private setAmount = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let value = Number(event.target.value)\r\n        this.setState({ amount: value });\r\n    }\r\n\r\n    private setPrice = (event: ChangeEvent<HTMLInputElement>) =>{\r\n        let value = Number(event.target.value)\r\n        this.setState({price: value});\r\n    }\r\n\r\n    private setStartDate = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let date = new Date(event.target.value)\r\n        this.setState({ startDate: date });\r\n    }\r\n\r\n    private setEndDate = (event: ChangeEvent<HTMLInputElement>) =>{\r\n        let date = new Date(event.target.value)\r\n        this.setState({endDate: date});\r\n    }\r\n\r\n    private createCoupon = async () =>{\r\n        try {\r\n            this.validateCreaateCoupon();           \r\n            await axios.post(\"http://localhost:8080/coupons\",this.state);\r\n            alert(\"The coupon was successfully created\");\r\n        } catch (error: any) {\r\n            alert(\"Coupon creation was failed\");\r\n            console.error(error.message);\r\n        }\r\n        getAllCoupons();\r\n        this.props.history.push(\"/coupons\");\r\n    }\r\n\r\n    private validateCreaateCoupon = () => {\r\n        if( ! this.state.title){\r\n            let message = \"Must enter a title\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(this.state.title.length < 2){\r\n            let message = \"Title must be at least two charachters long\";\r\n            alert(message)\r\n            throw new Error(message);\r\n        }\r\n        if( ! this.state.description){\r\n            let message = \"Must enter a descritpion\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(this.state.description.length < 2){\r\n            let message = \"Description must be at least two charachters long\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(! this.state.category){\r\n            let message = \"Must select a category\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(this.state.amount < 1){\r\n            let message = \"Amount must be greater than 0\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(this.state.price < 0){\r\n            let message = \"Price can't be negative\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if(this.state.startDate < new Date()){\r\n            let message = \"Start-Date has already past\";\r\n            alert(message);\r\n            throw new Error(message);\r\n        }\r\n        if( ! this.state.endDate){\r\n            let message = \"Must enter an end-date\";\r\n            alert(message);\r\n            throw new Error(message); \r\n        }\r\n        if(this.state.endDate <= this.state.startDate){\r\n            let message = \"Expiary date is invalid\";\r\n            alert(message)\r\n            throw new Error(message);\r\n        }\r\n        let amount = this.state.amount;\r\n        if( ! Number.isInteger(amount)){\r\n            let message = \"Amount must be an hole number\";\r\n            alert(message);\r\n            throw new Error(message);\r\n            \r\n        }\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\view\\units\\CouponComponent.tsx",["185","186","187"],"import {Component} from \"react\";\r\nimport {BasicCouponData} from \"../../../../models/coupons/BasicCouponData\";\r\nimport axios from \"axios\";\r\nimport { FullCouponData } from \"../../../../models/coupons/FullCouponData\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { store } from \"../../../../redux/store\";\r\nimport { ActionType } from \"../../../../redux/action-type\";\r\nimport \"./CouponComponent.css\";\r\nimport { getAllCoupons } from \"../../CouponUtils\";\r\n\r\ninterface couponState{\r\n    showModal: boolean,\r\n    fullCoupon: FullCouponData\r\n}\r\n\r\nexport default class CouponComponentForCustomer extends Component<BasicCouponData,couponState>{\r\n    public constructor(props: BasicCouponData){\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            fullCoupon: new FullCouponData()\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"coupon\">\r\n                <h2 id=\"title\">{this.props.couponTitle}</h2>\r\n                <h3 id=\"companyName\">Company: {this.props.companyName}</h3>\r\n                <h3 id=\"price\">Price: {this.props.price}</h3>\r\n                <h3 id=\"endDate\">Expiration: {this.props.endDate}</h3>\r\n                <button onClick={this.openModal}>View details</button>    \r\n                <Modal dialogClassName = \"couponModal\" enforceFocus scrollable show = {this.state.showModal}>\r\n                    <Modal.Header>  \r\n                        <Modal.Title>\r\n                            <h2>Coupon's name: {this.state.fullCoupon.title}</h2>\r\n                            <h3>Company: {this.state.fullCoupon.companyName}</h3>\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h2>Category: {this.state.fullCoupon.category}</h2>\r\n                        <h3>Description:</h3>\r\n                        <p>{this.state.fullCoupon.description}</p>\r\n                        <h3>Price: {this.state.fullCoupon.price}</h3>\r\n                        <h3>Amount: {this.state.fullCoupon.amount}</h3>\r\n                        <h3>Start date: {this.state.fullCoupon.startDate} </h3>\r\n                        <h3>End date: {this.state.fullCoupon.endDate}</h3> \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <this.ButtonSet/>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private ButtonSet = (props: any) =>{\r\n        let userType = sessionStorage.getItem(\"userType\");\r\n        let isCustomer = (userType == \"CUSTOMER\");\r\n        let isCompany = (userType == \"COMPANY\");\r\n        let isAdmin = (userType == \"ADMIN\");\r\n        return(\r\n            <div className = \"modalButtons\">\r\n                { isCustomer &&\r\n                  <NavLink to=\"/purchases/newPurchase\" exact>\r\n                  <button onClick={this.prepareForPurchaseOrUpdate}>Purchase</button>\r\n                  </NavLink>\r\n                  } \r\n                { isCompany &&\r\n                  <NavLink to = \"coupons/update\" exact>\r\n                    <button onClick={this.prepareForPurchaseOrUpdate}>Update</button>\r\n                  </NavLink>\r\n                }\r\n                {\r\n                  isCompany &&\r\n                  <button onClick={this.deleteCoupon}>Delete Coupon</button>\r\n                }\r\n                {\r\n                  isAdmin &&\r\n                  <NavLink to=\"/companies/viewCompany\" exact>\r\n                        <button>View Company</button>\r\n                  </NavLink>\r\n                }\r\n                <button onClick={this.hideModal}>Cancel</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private hideModal = () =>{\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    private openModal = async () =>{\r\n        if(this.state.fullCoupon.title === undefined){\r\n            try {\r\n                let url = \"http://localhost:8080/coupons/\" + this.props.id;\r\n                let response = await axios.get<FullCouponData>(url);\r\n                this.setState({showModal:true, fullCoupon: response.data});\r\n                return;\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        }\r\n        this.setState({showModal:true});\r\n    }           \r\n\r\n   private prepareForPurchaseOrUpdate = () => {\r\n        this.hideModal();\r\n        store.dispatch({type: ActionType.PrepareForPurchaseOrUpdate, payload: {...this.state.fullCoupon}});\r\n   }\r\n\r\n   private deleteCoupon = async () =>{\r\n       this.hideModal();\r\n       try {\r\n           let couponID = this.props.id;\r\n           let url = \"http://localhost:8080/coupons/\" + couponID;\r\n           await axios.delete(url);\r\n           alert(\"Coupon was successfully deleted\");\r\n       } catch (error) {\r\n           console.error(error.message);\r\n           alert(\"Deleting process was failed\");\r\n       }\r\n       getAllCoupons();\r\n   }\r\n   \r\n}   ","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\UpdateCoupon.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\ImageUnit.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\AmountUnit.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\coupons\\update\\units\\PriceUnit.tsx",["188"],"import axios from \"axios\";\r\nimport { Component, ChangeEvent} from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { store } from \"../../../../redux/store\";\r\nimport { getAllCoupons } from \"../../CouponUtils\";\r\nimport \"./Unit.css\";\r\n\r\ninterface UnitState{\r\n    input: string,\r\n    showModal: boolean,\r\n    price: number\r\n}\r\n\r\nexport  class PriceUnit extends Component<any, UnitState>{\r\n    public constructor(props: any){\r\n        super(props);\r\n        let coupon = store.getState().couponForAction;\r\n        this.state = {\r\n            input: null,\r\n            showModal: false,\r\n            price: coupon ? coupon.price : 0\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"unit\">\r\n                <h2>price:</h2>\r\n                <h3>{this.state.price}</h3>\r\n                <button onClick={this.setShowModal}>Change</button>\r\n                <Modal enforceFocus show={this.state.showModal}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>\r\n                            <h2>Update Coupon's price</h2>\r\n                        </Modal.Title>\r\n                        <Modal.Body>\r\n                            <h3>Price: {this.state.price}</h3>\r\n                            <input type=\"number\" placeholder=\"Enter coupon's price\" onChange={this.setInput} />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <button onClick={this.setShowModal}>Cancel</button>\r\n                            <button onClick={this.updatePrice}>Apply</button>\r\n                        </Modal.Footer>\r\n                    </Modal.Header>\r\n\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private setShowModal = () =>{\r\n        let newShowModal = ! this.state.showModal;\r\n        this.setState({showModal: newShowModal});\r\n    }\r\n\r\n    private setInput = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({input: event.target.value});\r\n    }\r\n\r\n    private updatePrice = async () => {\r\n        let newPrice = Number(this.state.input);\r\n        let couponID = store.getState().couponForAction.id\r\n        let url = \"http://localhost:8080/coupons/\" + couponID + \"/price\";\r\n        let data = {\r\n            price: this.state.input\r\n        };\r\n        try {\r\n            await axios.put(url,data);\r\n            alert(\"Coupon's price was updated successfully\");\r\n            this.setState({ price: parseFloat(data.price) })\r\n            getAllCoupons();\r\n        } catch (error) {\r\n            console.error(error.message);\r\n            alert(\"Update process was failed\");\r\n        }\r\n        this.setShowModal();\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\view\\CompaniesView.tsx",["189"],"import { Component, ChangeEvent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BasicCompanyData } from \"../../../models/companies/BasicCompanyData\";\r\nimport { store } from \"../../../redux/store\";\r\nimport { getAllCompanies } from \"../CompanyUtils\";\r\nimport CompanyComponent from \"./units/CompanyComponent\";\r\n\r\ninterface CompaniesViewState{\r\n    companies: BasicCompanyData[],\r\n    filterValue: string\r\n}\r\n\r\nexport default class CompaniesView extends Component<any, CompaniesViewState> {\r\n    public constructor(props: any){\r\n        super(props);\r\n\r\n        let initialCompaniesList = store.getState().companies;\r\n        if (!initialCompaniesList) {\r\n            initialCompaniesList = [];\r\n        }\r\n\r\n        this.state = {\r\n            companies: initialCompaniesList,\r\n            filterValue: \"\"\r\n        }\r\n\r\n        store.subscribe(this.subscription);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"companiesView\">\r\n                <section className=\"topSection\">\r\n                    <h1>Hi, good to see you :)</h1>\r\n                    {\r\n                        <NavLink to=\"/companies/create\" exact>\r\n                            <button>Create Company</button>\r\n                        </NavLink>\r\n                    }\r\n                    <label htmlFor=\"companyFilter\">Filter By Title:</label>\r\n                    <input type=\"text\" id=\"companyFilter\" onChange={this.setFilterValue} />\r\n                </section>\r\n                <section>\r\n                    {\r\n                        this.state.companies.filter(this.filter).map(\r\n                            (company) => <CompanyComponent key={company.id} {...company} />\r\n                        )\r\n                    }\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let isLoged = store.getState().isLoged;\r\n        let companies = store.getState().companies;\r\n        let shouldGetCompanies = (! companies) && isLoged;\r\n\r\n        if(shouldGetCompanies){\r\n            getAllCompanies();\r\n        }\r\n    }\r\n\r\n    private setFilterValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ filterValue: event.target.value.toLowerCase() });\r\n    }\r\n\r\n    private filter = (company: BasicCompanyData): boolean => {\r\n        if (this.state.filterValue == \"\") {\r\n            return true;\r\n        }\r\n        return company.name.toLowerCase().includes(this.state.filterValue);\r\n    }\r\n\r\n    private subscription = () => {\r\n        if (store.getState().companies ){\r\n            this.setState({ companies: store.getState().companies });\r\n        }\r\n    }\r\n}","C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\CompanyUtils.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\view\\units\\CompanyComponent.tsx",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\models\\companies\\FullCompanyData.ts",[],"C:\\Users\\baruc\\Documents\\MEGAsync\\Development\\Web-Development\\React\\coupons\\src\\components\\companies\\update\\ViewCompany.tsx",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":81,"column":26,"nodeType":"196","messageId":"197","endLine":81,"endColumn":28},{"ruleId":"198","severity":1,"message":"199","line":8,"column":17,"nodeType":"200","endLine":8,"endColumn":45},{"ruleId":"198","severity":1,"message":"199","line":9,"column":17,"nodeType":"200","endLine":9,"endColumn":45},{"ruleId":"194","severity":1,"message":"201","line":24,"column":86,"nodeType":"196","messageId":"197","endLine":24,"endColumn":88},{"ruleId":"194","severity":1,"message":"195","line":25,"column":80,"nodeType":"196","messageId":"197","endLine":25,"endColumn":82},{"ruleId":"202","severity":1,"message":"203","line":98,"column":17,"nodeType":"204","messageId":"205","endLine":98,"endColumn":25},{"ruleId":"202","severity":1,"message":"206","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":24},{"ruleId":"202","severity":1,"message":"207","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":42,"column":64,"nodeType":"196","messageId":"197","endLine":42,"endColumn":66},{"ruleId":"194","severity":1,"message":"195","line":49,"column":64,"nodeType":"196","messageId":"197","endLine":49,"endColumn":66},{"ruleId":"194","severity":1,"message":"195","line":85,"column":33,"nodeType":"196","messageId":"197","endLine":85,"endColumn":35},{"ruleId":"194","severity":1,"message":"195","line":72,"column":35,"nodeType":"196","messageId":"197","endLine":72,"endColumn":37},{"ruleId":"194","severity":1,"message":"201","line":79,"column":26,"nodeType":"196","messageId":"197","endLine":79,"endColumn":28},{"ruleId":"194","severity":1,"message":"195","line":59,"column":36,"nodeType":"196","messageId":"197","endLine":59,"endColumn":38},{"ruleId":"194","severity":1,"message":"195","line":60,"column":35,"nodeType":"196","messageId":"197","endLine":60,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":61,"column":33,"nodeType":"196","messageId":"197","endLine":61,"endColumn":35},{"ruleId":"202","severity":1,"message":"208","line":61,"column":13,"nodeType":"204","messageId":"205","endLine":61,"endColumn":21},{"ruleId":"194","severity":1,"message":"195","line":69,"column":36,"nodeType":"196","messageId":"197","endLine":69,"endColumn":38},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'FullCouponData' is defined but never used.","'FullUserData' is defined but never used.","'newPrice' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]